version: "3.8"

services:
  testserver:
    build:
      context: ../..
      dockerfile: test/integration/components/testserver_1.17/Dockerfile
    image: hatest-testserver
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "8087:8087"
      - "5051:5051"
    environment:
      LOG_LEVEL: DEBUG

  autoinstrumenter:
    build:
      context: ../..
      dockerfile: ./test/integration/components/ebpf-instrument/Dockerfile
    command:
      - --config=/configs/instrumenter-config${INSTRUMENTER_CONFIG_SUFFIX}.yml
    volumes:
      - ./configs/:/configs
      - ../../testoutput:/coverage
      - ../../testoutput/run-1.17:/var/run/beyla
    image: hatest-autoinstrumenter
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    pid: "service:testserver"
    environment:
      GOCOVERDIR: "/coverage"
      OTEL_EBPF_TRACE_PRINTER: "text"
      OTEL_EBPF_METRICS_FEATURES: "application,application_span"
      OTEL_EBPF_OPEN_PORT: "${OTEL_EBPF_OPEN_PORT}"
      OTEL_EBPF_DISCOVERY_POLL_INTERVAL: 500ms
      OTEL_GO_AUTO_TARGET_EXE: "${OTEL_GO_AUTO_TARGET_EXE}"
      OTEL_EBPF_SERVICE_NAMESPACE: "integration-test"
      OTEL_EBPF_METRICS_INTERVAL: "10ms"
      OTEL_EBPF_BPF_BATCH_TIMEOUT: "10ms"
      OTEL_EBPF_LOG_LEVEL: "DEBUG"
      OTEL_EBPF_BPF_DEBUG: "TRUE"
      OTEL_EBPF_INTERNAL_METRICS_PROMETHEUS_PORT: 8999
      OTEL_EBPF_HOSTNAME: "beyla"
    ports:
      - "8999:8999" # Prometheus scrape port, if enabled via config

  # OpenTelemetry Collector for Metrics. For Traces, we use directly Jaeger
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.104.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: ["--config=/etc/otelcol-config/otelcol-config.yml"]
    volumes:
      - ./configs/:/etc/otelcol-config
    ports:
      - "4317" # OTLP over gRPC receiver
      - "4318" # OTLP over HTTP receiver
      - "9464" # Prometheus exporter
      - "8888" # metrics endpoint
    depends_on:
      autoinstrumenter:
        condition: service_started
      prometheus:
        condition: service_started

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.55.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config${PROM_CONFIG_SUFFIX}.yml
      - --web.enable-lifecycle
      - --web.route-prefix=/
    volumes:
      - ./configs/:/etc/prometheus
    ports:
      - "9090:9090"

  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "16686:16686" # Query frontend
      - "4317" # OTEL GRPC traces collector
      - "4318" # OTEL HTTP traces collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
# curl http://localhost:16686/api/services
# curl http://localhost:16686/api/traces?service=testserver
